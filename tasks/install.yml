---

- name: 'Install | Ensure the service directory exists'
  ansible.builtin.file:
    path: "{{ bastion_path }}"
    state: directory
    mode: 0755

- name: 'Install | Check if the service is already installed'
  ansible.builtin.stat:
    path: "{{ bastion_version_flag }}"
  register: _bastion_installed

- when: _bastion_installed.stat.exists
  block:
    - name: 'Install | Ensure the service is at the expected version'
      ansible.builtin.slurp:
        src: "{{ bastion_version_flag }}"
      register: _bastion_version

    - name: 'Install | Compute the expected version'
      set_fact:
        _bastion_up_to_date: "{{ (_bastion_version.content | b64decode | from_yaml).version == bastion_version }}"
  rescue:
    - name: 'Install | Check installed version failed'
      debug:
        msg: 'Unable to properly check the service version, assuming it is not installed'

    - name: 'Install | Compute the expected version'
      set_fact:
        _bastion_up_to_date: false
  always:
    - name: 'Install | Compute the expected default version'
      set_fact:
        _bastion_up_to_date: "{{ _bastion_up_to_date | default(false) }}"

- when: not (_bastion_installed.stat.exists and _bastion_up_to_date)
  block:
    - name: 'Install | Download and unarchive the service'
      ansible.builtin.unarchive:
        src: "{{ bastion_url }}"
        remote_src: true
        dest: "{{ bastion_path }}"
        extra_opts:
        - '--strip-components=1'

    - name: 'Install | Ensure install flag exists'
      ansible.builtin.template:
        src: FLAG.j2
        dest: "{{ bastion_version_flag }}"
        mode: 0600

- name: 'Install | Ensure all depencies are installed'
  ansible.builtin.command: |
    {{ bastion_path }}/bin/admin/packages-check.sh -i
  register: _bastion_packages_check
  changed_when: "'0 upgraded, 0 newly installed' not in _bastion_packages_check.stdout"

- name: 'Install | Ensure ovh-ttyrec is installed'
  ansible.builtin.shell: |
    old=$(apt list --installed | grep ovh-ttyrec | awk '{ print $2 }')
    {{ bastion_path }}/bin/admin/install-ttyrec.sh -a
    new=$(apt list --installed | grep ovh-ttyrec | awk '{ print $2 }')
    if [ "$old" != "$new" ]; then
      echo "ovh-ttyrec_version_changed"
    fi
  register: _bastion_ovh_ttyrec_check
  changed_when: "'ovh-ttyrec_version_changed' in _bastion_ovh_ttyrec_check.stdout"

- name: 'Install | Initialize or upgrade the service'
  ansible.builtin.command: |
    {{ bastion_path }}/bin/admin/install --managed-upgrade
  register: _bastion_initialize

- name: 'Install | Ensure install flag exists'
  ansible.builtin.template:
    src: FLAG.j2
    dest: "{{ bastion_install_flag }}"
    mode: 0600
